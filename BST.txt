#include <iostream>
#include <queue>
using namespace std;

class node {
public:
    node* left;
    node* right;
    int data;

    node(int i) {
        data = i;
        left = NULL;
        right = NULL;
    }
};
///BST

node* insert_in_binary_Search_tree(node* root, int i) {
	if(root == NULL){
		root = new node(i);
		return root;
	}
	else{
		if(i<root->data){
			root->left = insert_in_binary_Search_tree(root->left, i);
		}
		else if(i>root->data){
			root->right = insert_in_binary_Search_tree(root->right, i);
		}
		return root;
	}
}

////
void display(node* current_node) {
    if (current_node != NULL) {
        cout << current_node->data << endl;
        display(current_node->left);
        display(current_node->right);
    }
}

int main() {
    node* root = new node(15);
	
    root = insert_in_binary_Search_tree(root, 17);
    root = insert_in_binary_Search_tree(root, 14);
    root = insert_in_binary_Search_tree(root, 22);
    root = insert_in_binary_Search_tree(root, 11);
    root = insert_in_binary_Search_tree(root, 3);
    root = insert_in_binary_Search_tree(root, 7);

    display(root);
}
